/*
 * Floatplane REST API
 *
 * The version of the OpenAPI document: 3.9.9
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FloatplaneAPIClientCSharp.Client;
using FloatplaneAPIClientCSharp.Api;
using FloatplaneAPIClientCSharp.Model;

namespace FloatplaneAPIClientCSharp.Test.Api
{
	/// <summary>
	///  Class for testing CreatorV3Api
	/// </summary>
	/// <remarks>
	/// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
	/// Please update the test case below to test the API endpoint.
	/// </remarks>
	public class CreatorV3ApiTests : IDisposable
	{
		private CreatorV3Api instance;

		public CreatorV3ApiTests()
		{
			instance = new CreatorV3Api();
			ApiTestHelper.SetStrictSerializerSettings(instance, instance.Client);
		}

		public void Dispose()
		{
			// Cleanup when everything is done.
		}

		/// <summary>
		/// Test GetCreator
		/// </summary>
		[Fact]
		public void GetCreatorTest()
		{
			string id = ApiTestSampleData.LttCreatorId;
			var response = instance.GetCreatorWithHttpInfo(id);
			Assert.Null(response.ErrorText);
			Assert.IsType<CreatorModelV3>(response.Data);
			Assert.Equal(ApiTestSampleData.LttCreatorId, response.Data?.Id);
		}

		[Fact]
		public void GetCreatorNonExistentTest()
		{
			var apiException = Assert.Throws<ApiException>(() => {
				string id = ApiTestSampleData.NonExistentIdentifer;
				var response = instance.GetCreatorWithHttpInfo(id);
			});
			Assert.NotNull(apiException.ErrorContent);
			Assert.Equal((int)System.Net.HttpStatusCode.NotFound, apiException.ErrorCode);

			ApiTestHelper.ValidateErrorModel(ApiTestHelper.GetErrorModel(apiException));
		}

		/// <summary>
		/// Test GetCreators
		/// </summary>
		[Fact]
		public void GetCreatorsTest()
		{
			string search = "linus";
			var response = instance.GetCreatorsWithHttpInfo(search);
			Assert.Null(response.ErrorText);
			Assert.IsType<List<CreatorModelV3>>(response.Data);
			Assert.True(response.Data?.Any());
		}

		[Fact]
		public void GetCreatorsNonExistentTest()
		{
			// We actually don't get an error. Just an empty list.
			string search = ApiTestSampleData.NonExistentIdentifer;
			var response = instance.GetCreatorsWithHttpInfo(search);
			Assert.Null(response.ErrorText);
			Assert.IsType<List<CreatorModelV3>>(response.Data);
			Assert.Equal(0, response.Data?.Count());
		}
	}
}
